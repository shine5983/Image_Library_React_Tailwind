{"version":3,"sources":["component/ImageCard.js","component/ImageSearch.js","App.js","index.js"],"names":["ImageCard","image","tags","split","className","src","webformatURL","user","views","downloads","likes","map","tag","index","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","process","then","res","json","data","hits","catch","err","console","log","length","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+JAuCeA,EArCG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEbC,EAAOD,EAAMC,KAAKC,MAAM,KAE9B,OACE,sBAAKC,UAAU,6CAAf,UACE,qBAAKC,IAAKJ,EAAMK,aAAcF,UAAU,WACxC,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,yCAAf,sBACYH,EAAMM,QAElB,+BACE,+BACE,4CACCN,EAAMO,SAET,+BACE,gDACCP,EAAMQ,aAET,+BACE,4CACCR,EAAMS,eAIb,qBAAKN,UAAU,YAAf,SACGF,EAAKS,KAAI,SAACC,EAAIC,GAAL,OACR,uBAAkBT,UAAU,yFAA5B,cACIQ,IADOC,YCHNC,EAzBK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EAEdC,mBAAS,IAFK,mBAE/BC,EAF+B,KAEzBC,EAFyB,KAStC,OACE,8BACE,qBAAKd,UAAU,iDAAf,SACE,sBAAMe,SARK,SAACC,GAChBA,EAAEC,iBACFN,EAAWE,IAMmBb,UAAU,kBAApC,SACE,sBAAKA,UAAU,8DAAf,UACE,uBAAOkB,SAAU,SAAAF,GAAC,OAAEF,EAAQE,EAAEG,OAAOC,QAAQC,KAAK,OAAOrB,UAAU,iHAAiHsB,YAAY,sBAChM,wBAAQtB,UAAU,sIAAsIqB,KAAK,SAA7J,8BCkBGE,MA/Bf,WAAgB,IAAD,EACeX,mBAAS,IADxB,mBACNY,EADM,KACEC,EADF,OAEqBb,oBAAS,GAF9B,mBAENc,EAFM,KAEKC,EAFL,OAGWf,mBAAS,IAHpB,mBAGNgB,EAHM,KAGAC,EAHA,KAeb,OAVAC,qBAAU,WACRC,MAAM,gCAAD,OAAiCC,qCAAjC,cAA4EJ,EAA5E,kCACFK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJX,EAAUW,EAAKC,MACfV,GAAa,MAEdW,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,QAC1B,CAACX,IAGD,sBAAK5B,UAAU,oBAAf,UACE,cAAC,EAAD,CAAaW,WAAY,SAACE,GAAD,OAAUgB,EAAQhB,OAEzCa,GAA+B,IAAlBF,EAAOkB,QAAgB,oBAAI1C,UAAU,qCAAd,6BAErC0B,EAAY,oBAAI1B,UAAU,qCAAd,4BAAyE,qBAAKA,UAAU,yBAAf,SACnFwB,EAAOjB,KAAI,SAAAV,GAAK,OACf,cAAC,EAAD,CAA2BA,MAAOA,GAAjBA,EAAM8C,aCtBjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.1ed3bea4.chunk.js","sourcesContent":["import React from 'react';\n\nconst ImageCard = ({ image }) => {\n  \n  const tags = image.tags.split(',');\n\n  return (\n    <div className='max-w-sm rounded overflow-hidden shadow-lg'>\n      <img src={image.webformatURL} className='w-full' />\n      <div className=\"px-6 py-4\">\n        <div className=\"font-bold text-purple-500 text-lg mb-2\">\n          Photo by {image.user} \n        </div>\n        <ul>\n          <li>\n            <strong>Views:</strong>\n            {image.views}\n          </li>\n          <li>\n            <strong>Downloads:</strong>\n            {image.downloads}\n          </li>\n          <li>\n            <strong>Likes:</strong>\n            {image.likes}\n          </li>\n        </ul>\n      </div>\n      <div className=\"px-6 py-4\">\n        {tags.map((tag,index) => (\n          <span key={index} className=\"inline-block bg-gray-200 round-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\">\n            #{tag}\n          </span>          \n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default ImageCard;\n","import React, { useState } from 'react'\n\nconst ImageSearch = ({ searchText }) => {\n\n  const [text, setText] = useState('');\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    searchText(text);\n  }\n\n  return (\n    <div>\n      <div className=\"max-w-sm rounded overflow-hidden my-10 mx-auto\">\n        <form onSubmit={onSubmit} className=\"w-full max-w-sm\">\n          <div className=\"flex items-center border-b bordeer-b-2 border-teal-500 py-2\">\n            <input onChange={e=>setText(e.target.value)} type=\"text\" className=\"appearane-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\" placeholder=\"Search Image Term\" />\n            <button className=\"flex-shrink-0 bg-green-500 hover:bg-green-700 border-green-500 hover:border-green-700 text-sm border-4 text-white py-1 px-2 rounded\" type=\"submit\">\n              Search\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default ImageSearch\n","import React, {useState , useEffect} from 'react';\nimport ImageCard from './component/ImageCard'\nimport ImageSearch from './component/ImageSearch'\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState('');\n\n  useEffect(() => {\n    fetch(`https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true`)\n      .then(res => res.json())\n      .then(data => {\n        setImages(data.hits);\n        setIsLoading(false)\n      })\n      .catch(err=>console.log(err))\n  },[term])\n\n  return (\n    <div className=\"container mx-auto\">\n      <ImageSearch searchText={(text) => setTerm(text)} />\n      \n      {!isLoading && images.length === 0 && <h1 className=\"text-6xl text-center mx-auto mt-32\">No Images Found</h1>}\n\n      {isLoading ? <h1 className=\"text-6xl text-center mx-auto mt-32\">Loading.......</h1> : <div className=\"grid grid-cols-3 gap-4\">\n        {images.map(image => (\n          <ImageCard key={ image.id} image={image} />\n        ))}\n      </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}